from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.image import Image
from kivy.graphics import Color, Rectangle, Line
import requests
from datetime import datetime

class MainScreen(BoxLayout):
    def __init__(self, **kwargs):
        super().__init__(orientation="vertical", **kwargs)
        self.create_ui()

    def create_ui(self):
        # Background color
        with self.canvas.before:
            Color(0.96, 0.92, 0.88, 1)
            self.rect = Rectangle(pos=self.pos, size=self.size)
            self.bind(pos=self.update_rect, size=self.update_rect)

        # Header (Profile Icon & Name Input)
        header = BoxLayout(size_hint_y=None, height=60, padding=10, spacing=10)
        header.add_widget(Image(source="profile_icon.png", size_hint=(None, None), size=(40, 40)))

        self.name_input = TextInput(text="Enter Name", font_size=20, multiline=False)
        self.name_input.bind(on_text_validate=self.update_name)
        header.add_widget(self.name_input)

        self.add_widget(header)

        # Daily Affirmation
        affirmations = [
            "You are enough!", "Today is a fresh start!", "Believe in yourself!",
            "You can do hard things!"
        ]
        today_index = datetime.now().day % len(affirmations)
        self.affirmation_label = Label(text=affirmations[today_index], font_size=18)

        text_box = BoxLayout(size_hint_y=None, height=150, padding=10)
        text_box.add_widget(self.affirmation_label)
        self.add_widget(text_box)

        # Mood Selection
        mood_bar = BoxLayout(size_hint_y=None, height=50, spacing=10, padding=20)
        moods = {"üò¢": "Sad", "üòê": "Neutral", "üòä": "Happy"}

        for emoji, mood in moods.items():
            btn = Button(text=emoji, font_size=30)
            btn.bind(on_press=lambda instance, m=mood: self.log_mood(m))
            mood_bar.add_widget(btn)

        self.add_widget(mood_bar)

        # Bottom Navigation
        nav_bar = BoxLayout(size_hint_y=None, height=60, padding=10, spacing=20)
        nav_bar.add_widget(Button(text="üè†"))
        nav_bar.add_widget(Button(text="üí¨"))
        nav_bar.add_widget(Button(text="üìä"))
        nav_bar.add_widget(Button(text="üë§"))
        self.add_widget(nav_bar)

    def update_name(self, instance):
        self.name_input.text = f"Hello, {instance.text}!"

    def log_mood(self, mood):
        user = self.name_input.text.replace("Hello, ", "")
        data = {"user": user, "mood": mood}
        response = requests.post("http://localhost:5000/mood", json=data)

        if response.status_code == 200:
            print("Mood saved successfully!")
        else:
            print("Error saving mood.")

    def update_rect(self, *args):
        self.rect.pos = self.pos
        self.rect.size = self.size

class MoodTrackerApp(App):
    def build(self):
        return MainScreen()

if __name__ == "__main__":
    MoodTrackerApp().run()
