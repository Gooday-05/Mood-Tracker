from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.image import Image
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.graphics import Color, Rectangle
from kivy.core.window import Window
from kivy.config import Config
import requests
from datetime import datetime
from functools import partial

# ‚úÖ Set Fullscreen Mode for Android
Window.fullscreen = 'auto'

# ‚úÖ Enable Mobile Keyboard
Config.set('kivy', 'keyboard_mode', 'dock')

class MainScreen(BoxLayout):
    def __init__(self, **kwargs):
        super().__init__(orientation="vertical", **kwargs)
        self.create_ui()

    def create_ui(self):
        # ‚úÖ Background color
        with self.canvas.before:
            Color(0.96, 0.92, 0.88, 1)
            self.rect = Rectangle(pos=self.pos, size=self.size)
        self.bind(pos=self.update_rect, size=self.update_rect)

        # ‚úÖ Header (Profile Icon & Name Input)
        header = BoxLayout(size_hint_y=0.1, padding=10, spacing=10)
        header.add_widget(Image(source="profile_icon.png", size_hint=(None, None), size=(50, 50)))
        
        self.name_input = TextInput(
            text="", font_size=20, multiline=False, hint_text="Enter Name", size_hint_x=0.8
        )
        self.name_input.bind(on_text_validate=self.update_greeting)
        header.add_widget(self.name_input)
        
        self.add_widget(header)

        # ‚úÖ Greeting Label
        self.greeting_label = Label(text="Welcome!", font_size=22, size_hint_y=0.1)
        self.add_widget(self.greeting_label)

        # ‚úÖ Daily Affirmation
        affirmations = ["You are enough!", "Today is a fresh start!", "Believe in yourself!", "You can do hard things!"]
        today_index = datetime.now().day % len(affirmations)
        self.affirmation_label = Label(text=affirmations[today_index], font_size=20, size_hint_y=0.2)

        text_box = BoxLayout(size_hint_y=0.2, padding=10)
        text_box.add_widget(self.affirmation_label)
        self.add_widget(text_box)

        # ‚úÖ Mood Selection (Larger Buttons for Touchscreens)
        mood_bar = BoxLayout(size_hint_y=0.15, spacing=10, padding=20)
        moods = {"üò¢": "Sad", "üòê": "Neutral", "üòä": "Happy"}

        for emoji, mood in moods.items():
            btn = Button(text=emoji, font_size=40, size_hint=(0.3, 0.8))
            btn.bind(on_press=partial(self.log_mood, mood))
            mood_bar.add_widget(btn)

        self.add_widget(mood_bar)

        # ‚úÖ Bottom Navigation (Larger for Mobile)
        nav_bar = BoxLayout(size_hint_y=0.1, padding=10, spacing=20)
        home_btn = Button(text="üè†", font_size=30, size_hint_x=0.25)
        community_btn = Button(text="üí¨", font_size=30, size_hint_x=0.25)
        activity_btn = Button(text="üìä", font_size=30, size_hint_x=0.25)
        profile_btn = Button(text="üë§", font_size=30, size_hint_x=0.25)

        nav_bar.add_widget(home_btn)
        nav_bar.add_widget(community_btn)
        nav_bar.add_widget(activity_btn)
        nav_bar.add_widget(profile_btn)

        self.add_widget(nav_bar)

    def update_greeting(self, instance):
        self.greeting_label.text = f"Hello, {instance.text}!"

    def log_mood(self, mood, instance):
        user = self.name_input.text.strip()
        if not user:
            self.greeting_label.text = "Please enter your name first!"
            return
        
        data = {"user": user, "mood": mood}
        response = requests.post("http://localhost:3000/log_mood", json=data)

        if response.status_code == 200:
            print("Mood saved successfully!")
        else:
            print("Error saving mood.")

    def update_rect(self, *args):
        self.rect.pos = self.pos
        self.rect.size = self.size

class MoodTrackerApp(App):
    def build(self):
        sm = ScreenManager()
        
        # ‚úÖ Create Home Screen
        home_screen = Screen(name="home")
        home_screen.add_widget(MainScreen())  # Correct way to add MainScreen
        sm.add_widget(home_screen)

        return sm  # Return the ScreenManager

if __name__ == "__main__":
    MoodTrackerApp().run()
